{"version":3,"sources":["redux/to-do-cart.js","components/modal.component.jsx","components/list.component.jsx","components/table.component.jsx","components/input.component.jsx","components/header.component.jsx","App.js","index.js"],"names":["INITIAL_STATE","cartItems","ActionTypes","addItems","item","type","payload","store","createStore","state","action","status","String","fromCodePoint","parseInt","filter","task","map","console","log","id","connect","dispatch","editItem","items","toggle","useState","setTask","resp","className","onClick","name","value","onChange","e","target","items2","removeItem","removeItems","toggleStatus","seen","setSeen","togglePop","previous","addItem","setResp","setId","label","required","Button","variant","items1","alert","Header","children","Navbar","bg","expand","Container","Brand","href","App","class","ReactDOM","render","document","getElementById"],"mappings":"0TAEMA,EAAgB,CACpBC,UAAW,IAGPC,EACM,WADNA,EAES,cAFTA,EAGW,gBAHXA,EAIO,YAGAC,EAAW,SAACC,GAAD,MAAW,CACjCC,KAAMH,EACNI,QAASF,IA0EIG,EAFDC,aAtDM,WAAoC,IAAnCC,EAAkC,uDAA1BT,EAAeU,EAAW,uCACrD,OAAQA,EAAOL,MACb,KAAKH,EACH,OAAO,2BACFO,GADL,IAIER,UAAU,GAAD,mBACJQ,EAAMR,WADF,4BAGFS,EAAOJ,SAHL,IAILK,OAAQ,WAAkBC,OAAOC,cAAcC,SAAS,KAAM,WAItE,KAAKZ,EACH,OAAO,2BACFO,GADL,IAEER,UAAWQ,EAAMR,UAAUc,QACzB,SAACd,GAAD,OAAeA,EAAUe,OAASN,EAAOJ,QAAQU,UAGvD,KAAKd,EACH,OAAO,2BACFO,GADL,IAEER,UAAWQ,EAAMR,UAAUgB,KAAI,SAAChB,GAAD,OAC7BA,EAAUe,OAASN,EAAOJ,QAAQU,KAAlC,2BAESf,GAFT,IAGMU,OACE,cAAqBC,OAAOC,cAAcC,SAAS,KAAM,OAE7Db,OAGV,KAAKC,EAGH,OAFAgB,QAAQC,IAAIT,EAAOJ,QAAQU,MAC3BE,QAAQC,IAAIT,EAAOJ,QAAQc,IACpB,2BACFX,GADL,IAEER,UAAWQ,EAAMR,UAAUgB,KAAI,SAAChB,GAAD,OAC7BA,EAAUmB,KAAOV,EAAOJ,QAAQc,GAAhC,2BAESnB,GAFT,IAGMe,KAAMN,EAAOJ,QAAQU,OAEvBf,OAGV,QACE,OAAOQ,M,eCtCX,IAQeY,eAHS,SAACZ,GAAD,MAAY,CAClCR,UAAWQ,EAAMR,cANQ,SAACqB,GAAD,MAAe,CACxCnB,SAAU,SAACC,GAAD,OAAUkB,EAASnB,EAASC,KACtCmB,SAAU,SAACnB,GAAD,OAAUkB,EDnBA,SAAClB,GAAD,MAAW,CACjCC,KAAMH,EACNI,QAASF,GCiBsBmB,CAASnB,QAMzBiB,EAhDjB,YAA6C,IAA3BG,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,OAAQF,EAAW,EAAXA,SAC7B,EAAwBG,mBAAS,IAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAAwBD,mBAASF,EAAMI,MAAvC,mBAAOA,EAAP,KACA,GADA,KACoBF,mBAASF,EAAMJ,KAAnC,mBAAOA,EAAP,KAcE,OAdF,KAeI,qBAAKS,UAAU,SAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAMA,UAAU,QAAQC,QAAS,kBAAML,KAAvC,kBACA,uBACA,+BACE,0CAEE,uBACEpB,KAAK,OACL0B,KAAK,OACLC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOH,eAIxC,uBACA,wBAAQF,QA7BhB,WACE,IAAMM,EAAS,CACbpB,KAAMA,EACNY,KAAMA,EACNR,GAAIA,GAENG,EAASa,GACTlB,QAAQC,IAAIiB,GACZT,EAAQ,IACRF,KAoBM,0BCMZ,IAKeJ,cAAQ,MALI,SAACC,GAAD,MAAe,CACxCe,WAAY,SAACjC,GAAD,OAAUkB,EF5BG,SAAClB,GAAD,MAAW,CACpCC,KAAMH,EACNI,QAASF,GE0BsBkC,CAAYlC,KAC3CmC,aAAc,SAACnC,GAAD,OAAUkB,EFxBE,SAAClB,GAAD,MAAW,CACrCC,KAAMH,EACNI,QAASF,GEsBwBmC,CAAanC,QAGjCiB,EA1Cf,YAAuD,IAAnCgB,EAAkC,EAAlCA,WAAYE,EAAsB,EAAtBA,aAAcf,EAAQ,EAARA,MAE5C,EAAwBE,oBAAS,GAAjC,mBAAOc,EAAP,KAAaC,EAAb,KAEA,SAASC,IACPD,GAAQ,SAAAE,GAAQ,OAAKA,KAIrB,OACE,sBAAKd,UAAU,gBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,MAAMC,QAASY,EAA9B,SACE,8CAEDF,EACC,cAAC,EAAD,CAAQf,OAAQiB,EAAWlB,MAAOA,IAChC,QAEN,sBAAMK,UAAU,OAAhB,SAAwBL,EAAMR,OAC9B,sBAAMa,UAAU,OAAhB,SAAwBL,EAAMI,OAC9B,sBACEC,UAAU,SACVC,QAAS,kBAAMS,EAAaf,IAF9B,SAIGA,EAAMb,SAET,qBACEkB,UAAU,gBACVC,QAAS,kBAAMO,EAAWb,IAF5B,0BCAOH,eAJS,SAACZ,GAAD,MAAY,CAClCR,UAAWQ,EAAMR,aAGJoB,EA7BM,SAAC,GAAD,IAAGpB,EAAH,EAAGA,UAAH,OACnB,sBAAK4B,UAAU,gBAAf,UACE,sBAAKA,UAAU,kBAAf,UACA,qBAAKA,UAAU,eAAf,SACI,2BAEF,qBAAKA,UAAU,eAAf,SACE,0CAEF,qBAAKA,UAAU,eAAf,SACE,0CAEF,qBAAKA,UAAU,eAAf,SACE,4CAEF,qBAAKA,UAAU,eAAf,SACE,+CAGH5B,EAAUgB,KAAI,SAAChB,GAAD,OACb,cAAC,EAAD,CAAUuB,MAAOvB,a,4BC2CvB,IAIeoB,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCsB,QAAS,SAACxC,GAAD,OAAUkB,EAASnB,EAASC,QAGxBiB,EAhEf,YAA4B,IAAXuB,EAAU,EAAVA,QAEb,EAAwBlB,mBAAS,IAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaiB,EAAb,KACA,EAAoBnB,mBAAS,GAA7B,mBAAON,EAAP,KAAW0B,EAAX,KAoBA,OACE,sBAAKjB,UAAU,UAAf,UACE,iCACE,sBAAKA,UAAU,QAAf,UACE,uBACEA,UAAU,aACVE,KAAK,OACL1B,KAAK,OACL4B,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOH,QAClCA,MAAOhB,EACP+B,MAAM,OACNC,UAAQ,IAEV,uBAAOnB,UAAU,mBAAjB,qBAGF,sBAAKA,UAAU,QAAf,UACE,uBACEA,UAAU,aACVE,KAAK,OACL1B,KAAK,OACL4B,SAAU,SAACC,GAAD,OAAOW,EAAQX,EAAEC,OAAOH,QAClCA,MAAOJ,EACPmB,MAAM,OACNC,UAAQ,IAEV,uBAAOnB,UAAU,mBAAjB,wBAGJ,qBAAKA,UAAU,UAAf,SACE,cAACoB,EAAA,EAAD,CAAQC,QAAQ,UAAUpB,QAhDpC,WACI,IAAMqB,EAAS,CACbnC,KAAMA,EACNY,KAAMA,EACNR,GAAIA,GAEe,KAAhB+B,EAAOnC,KAAgC,KAAhBmC,EAAOvB,MACjCgB,EAAQO,GACRxB,EAAQ,IACRkB,EAAQ,IACRC,GAAM,SAACH,GAAD,OAAcA,EAAU,KAE9BzB,QAAQC,IAAIC,IAEZgC,MAAM,gCAkCF,oC,gBC9CKC,EAdA,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OAGP,qBAAKzB,UAAU,kBAAf,SACI,cAAC0B,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,KAAKP,QAAQ,OAAtC,SACI,cAACQ,EAAA,EAAD,UACI,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,SAA4BN,WCUjCO,MAdf,WACE,OACI,qBAAKC,MAAM,WAAX,SAEE,sBAAKA,MAAM,iBAAX,UACE,cAAC,EAAD,6BACA,cAAC,EAAD,IAEA,cAAC,EAAD,UCNVC,IAASC,OACP,cAAC,IAAD,CAAUzD,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJ0D,SAASC,eAAe,W","file":"static/js/main.1d7420dc.chunk.js","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst INITIAL_STATE = {\r\n  cartItems: []\r\n};\r\n\r\nconst ActionTypes = {\r\n  ADD_ITEM: \"ADD_ITEM\",\r\n  REMOVE_ITEM: \"REMOVE_ITEM\",\r\n  TOGGLE_STATUS: \"TOGGLE_STATUS\",\r\n  EDIT_ITEM: \"EDIT_ITEM\"\r\n};\r\n\r\nexport const addItems = (item) => ({\r\n  type: ActionTypes.ADD_ITEM,\r\n  payload: item\r\n});\r\n\r\nexport const removeItems = (item) => ({\r\n  type: ActionTypes.REMOVE_ITEM,\r\n  payload: item\r\n});\r\n\r\nexport const toggleStatus = (item) => ({\r\n  type: ActionTypes.TOGGLE_STATUS,\r\n  payload: item\r\n});\r\n\r\nexport const editItem = (item) => ({\r\n  type: ActionTypes.EDIT_ITEM,\r\n  payload: item\r\n});\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        //       cartItems: [...state.cartItems, action.payload]\r\n\r\n        cartItems: [\r\n          ...state.cartItems,\r\n          {\r\n            ...action.payload,\r\n            status: \"pending\" + \" \" + String.fromCodePoint(parseInt(2716, 16))\r\n          }\r\n        ]\r\n      };\r\n    case ActionTypes.REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (cartItems) => cartItems.task !== action.payload.task\r\n        )\r\n      };\r\n    case ActionTypes.TOGGLE_STATUS:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.map((cartItems) =>\r\n          cartItems.task === action.payload.task\r\n            ? {\r\n                ...cartItems,\r\n                status:\r\n                  \"completed \" + \" \" + String.fromCodePoint(parseInt(2714, 16))\r\n              }\r\n            : cartItems\r\n        )\r\n      };\r\n    case ActionTypes.EDIT_ITEM:\r\n      console.log(action.payload.task);\r\n      console.log(action.payload.id);\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.map((cartItems) =>\r\n          cartItems.id === action.payload.id\r\n            ? {\r\n                ...cartItems,\r\n                task: action.payload.task\r\n              }\r\n            : cartItems\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(cartReducer);\r\n\r\nexport default store;","import \"./modal.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { editItem, addItems } from \"../redux/to-do-cart\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Modals ({items, toggle, editItem}) {\r\n    const [task, setTask] = useState('')\r\n    const [resp, setResp] = useState(items.resp)\r\n    const [id, setId] = useState(items.id)\r\n\r\n    function saveClick () {\r\n      const items2 = {\r\n        task: task,\r\n        resp: resp,\r\n        id: id\r\n      }\r\n      editItem(items2);\r\n      console.log(items2);\r\n      setTask('')\r\n      toggle()\r\n    }\r\n\r\n      return (\r\n        <div className=\"modals\">\r\n          <div className=\"modals_content\">\r\n            <span className=\"close\" onClick={() => toggle()}>&times;</span>\r\n            <br></br>\r\n            <form>\r\n              <label>\r\n                Task:\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"task\"\r\n                  value={task}\r\n                  onChange={(e) => setTask(e.target.value)}\r\n                />\r\n              </label>\r\n            </form>\r\n            <br></br>\r\n            <button onClick={saveClick}>Save</button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n    addItems: (item) => dispatch(addItems(item)),\r\n    editItem: (item) => dispatch(editItem(item))\r\n  });\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    cartItems: state.cartItems\r\n  });\r\n  export default connect(mapStateToProps, mapDispatchToProps)(Modals);","import React from \"react\";\r\nimport \"./list.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeItems, toggleStatus } from \"../redux/to-do-cart\";\r\nimport Modals from './modal.component';\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction ListItem ({removeItem, toggleStatus, items}) {\r\n\r\n  const [seen, setSeen] = useState(false)\r\n\r\n  function togglePop () {\r\n    setSeen(previous => !previous)\r\n   \r\n  }\r\n\r\n    return (\r\n      <div className=\"checkout-item\">\r\n        <div className=\"name\">\r\n          <div className=\"btn\" onClick={togglePop}>\r\n            <button>&#10000;</button>\r\n          </div>\r\n          {seen ? (\r\n            <Modals toggle={togglePop} items={items} />\r\n          ) : null}\r\n        </div>\r\n        <span className=\"name\">{items.task}</span>\r\n        <span className=\"name\">{items.resp}</span>\r\n        <span\r\n          className=\"status\"\r\n          onClick={() => toggleStatus(items)}\r\n        >\r\n          {items.status}\r\n        </span>\r\n        <div\r\n          className=\"remove-button\"\r\n          onClick={() => removeItem(items)}\r\n        >\r\n          &#x267A;\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeItem: (item) => dispatch(removeItems(item)),\r\n  toggleStatus: (item) => dispatch(toggleStatus(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ListItem);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./table.styles.scss\";\r\nimport ListItem from \"./list.component\";\r\n\r\n\r\nconst CheckOutPage = ({ cartItems }) => (\r\n  <div className=\"checkout-page\">\r\n    <div className=\"checkout-header\">\r\n    <div className=\"header-block\">\r\n        <span></span>\r\n      </div>\r\n      <div className=\"header-block\">\r\n        <span>Task</span>\r\n      </div>\r\n      <div className=\"header-block\">\r\n        <span>Resp</span>\r\n      </div>\r\n      <div className=\"header-block\">\r\n        <span>Status</span>\r\n      </div>\r\n      <div className=\"header-block\">\r\n        <span>Remove</span>\r\n      </div>\r\n    </div>\r\n    {cartItems.map((cartItems) => (\r\n      <ListItem items={cartItems} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cartItems: state.cartItems\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckOutPage);\r\n","import React from \"react\";\r\nimport \"./input.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItems } from '../redux/to-do-cart';\r\nimport { useState } from \"react\";\r\nimport Bootstrap from 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nfunction Input ({addItem}) {\r\n\r\n    const [task, setTask] = useState('')\r\n    const [resp, setResp] = useState('')\r\n    const [id, setId] = useState(0)\r\n    \r\nfunction handleClick() {\r\n    const items1 = {\r\n      task: task,\r\n      resp: resp,\r\n      id: id\r\n    };\r\n    if ((items1.task !== \"\") & (items1.resp !== \"\")) {\r\n      addItem(items1)\r\n      setTask('')\r\n      setResp('')\r\n      setId((previous) => previous +1)\r\n\r\n      console.log(id);\r\n    } else {\r\n      alert(\"please fill out both fields\");\r\n    }\r\n  }\r\n\r\n    return (\r\n      <div className=\"sign-in\">\r\n        <form>\r\n          <div className=\"group\">\r\n            <input\r\n              className=\"form-input\"\r\n              name=\"task\"\r\n              type=\"task\"\r\n              onChange={(e) => setTask(e.target.value)}\r\n              value={task}\r\n              label=\"task\"\r\n              required\r\n            />\r\n            <label className=\"form-input-label\">task</label>\r\n          </div>\r\n\r\n          <div className=\"group\">\r\n            <input\r\n              className=\"form-input\"\r\n              name=\"resp\"\r\n              type=\"resp\"\r\n              onChange={(e) => setResp(e.target.value)}\r\n              value={resp}\r\n              label=\"resp\"\r\n              required\r\n            />\r\n            <label className=\"form-input-label\">resp</label>\r\n          </div>\r\n        </form>\r\n        <div className=\"buttons\">\r\n          <Button variant=\"success\" onClick={handleClick}>ADD to-do List</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItems(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Input);\r\n","import react, { Children } from 'react';\r\nimport { Navbar, Container} from 'react-bootstrap';\r\n\r\nconst Header = ({children}) => (\r\n   \r\n\r\n        <div className='checkout-header'>\r\n            <Navbar bg=\"dark\" expand='sm' variant='dark'>\r\n                <Container>\r\n                    <Navbar.Brand href=\"#home\">{children}</Navbar.Brand>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n\r\n\r\n)\r\n\r\nexport default Header;\r\n","import CheckoutPage from \"./components/table.component\";\r\nimport \"./App.css\";\r\nimport Input from \"./components/input.component\";\r\nimport Header from \"./components/header.component\";\r\n\r\nfunction App() {\r\n  return (\r\n      <div class=\"homepage\">\r\n        \r\n        <div class=\"directory-menu\">\r\n          <Header>To-do-list APP</Header>\r\n          <Input />\r\n          \r\n          <CheckoutPage />\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Provider} from 'react-redux';\r\nimport App from \"./App\";\r\nimport store from \"./redux/to-do-cart\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}